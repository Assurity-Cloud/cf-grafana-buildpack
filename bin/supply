#!/usr/bin/env bash
set -euo pipefail

BUILD_DIR="${1}"
CACHE_DIR="${2}"
DEPS_DIR="${3}"
DEPS_IDX="${4}"

GRAFANA_VERSION="${GRAFANA_VERSION:-6.0.2}"
GRAFANA_DOWNLOAD_URL="https://dl.grafana.com/oss/release/grafana-${GRAFANA_VERSION}.linux-amd64.tar.gz"
GRAFANA_DIR="${DEPS_DIR}/grafana"
SQLPROXY_DIR="${DEPS_DIR}/cloud_sql_proxy"
BUILDPACK_DIR=$(dirname $(readlink -f ${BASH_SOURCE%/*}))
ASSETS_PATH="${BUILDPACK_DIR}/../assets"


if [ "$(printf '%s\n' "6.0.0" "${GRAFANA_VERSION}" | sort -V | head -n1)" == "6.0.0" ]
then 
    # Greater than or equal to 6.0.0"
    echo "-----> Requesting grafana ${GRAFANA_VERSION}"
else
    echo "ERROR, Grafana version ${GRAFANA_VERSION} not supported by this buildpack"
    exit 1
fi

if [ -f "${BUILD_DIR}/runtime.txt" ]
then
    GRAFANA_DOWNLOAD_URL=$(grep -v '^#' "${BUILD_DIR}/runtime.txt" | head -n1)
    echo "-----> Downloading Grafana from runtime.txt spec: ${GRAFANA_DOWNLOAD_URL}"
    wget -nv "${GRAFANA_DOWNLOAD_URL}" -O "${CACHE_DIR}/grafana.tgz" 2>&1 | sed 's/^/       /'
else
    ls -l
    ls -l "${BUILDPACK_DIR}"
    ls -l "${ASSETS_PATH}"
    if [ -f "${ASSETS_PATH}/grafana-${GRAFANA_VERSION}.linux-amd64.tar.gz" ]
    then
       echo "-----> Using grafana ${GRAFANA_VERSION} from the builpack"
       cp "${ASSETS_PATH}/grafana-${GRAFANA_VERSION}.linux-amd64.tar.gz" "${CACHE_DIR}/grafana.tgz"
    else
       echo "-----> Downloading Grafana: ${GRAFANA_DOWNLOAD_URL}"
       wget -nv "${GRAFANA_DOWNLOAD_URL}" -O "${CACHE_DIR}/grafana.tgz" 2>&1 | sed 's/^/       /'
       if [ $? -ne 0 ]
       then
           echo "ERROR, Grafana version ${GRAFANA_VERSION} not found, URL=${GRAFANA_DOWNLOAD_URL}"
           exit 1
       fi
    fi
fi

echo "-----> Installing Grafana"
mkdir -p "${GRAFANA_DIR}"
tar -zxf ${CACHE_DIR}/grafana.tgz -C "${GRAFANA_DIR}" --strip-components 1

mkdir -p "${SQLPROXY_DIR}"
if [ -f "${ASSETS_PATH}/cloud_sql_proxy.linux.amd64" ]
then
    echo "-----> Installing cloud sql proxy"
    cp "${ASSETS_PATH}/cloud_sql_proxy.linux.amd64" "${SQLPROXY_DIR}/cloud_sql_proxy"
else
    echo "-----> Downloading cloud sql proxy"
    wget -nv https://dl.google.com/cloudsql/cloud_sql_proxy.linux.amd64 -O "${SQLPROXY_DIR}/cloud_sql_proxy" 2>&1 | sed 's/^/       /'
end

